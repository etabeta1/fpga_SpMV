<pragmas>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<9, false>::operator++(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<5, false>::operator++(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<5, false>& ap_int_base<5, false>::operator+=<1, false>(ap_int_base<1, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<9, false>& ap_int_base<9, false>::operator+=<1, false>(ap_int_base<1, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="checkOverflowBaseC" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="bool ap_int_base<9, false>::operator<<9, false>(ap_int_base<9, false> const&) const" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<5, false>::RType<($_0)32, true>::plus operator+<5, false>(ap_int_base<5, false> const&, int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<9, false>::operator unsigned long long() const" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<1, false>::ap_int_base(int)" off="0" region="0" recursive="0"/>
<pragma file="SpMV.cpp" line="31" pragmaType="unroll" parentfunction="SpMV" factor="-1" skip_exit_check="0"/>
<pragma file="SpMV.cpp" line="38" pragmaType="pipeline" parentfunction="SpMV" off="0" ii="1" rewind="0" style=""/>
<pragma file="SpMV.cpp" line="15" pragmaType="interface" parentfunction="SpMV" mode="m_axi" port="values" bundle="gmem0" offset="slave" name="" depth="100" num_read_outstanding="-1" num_write_outstanding="-1" max_burst_read_length="-1" max_burst_write_length="-1" latency="-1" max_widen_bitwidth="-1" channel=""/>
<pragma file="SpMV.cpp" line="16" pragmaType="interface" parentfunction="SpMV" mode="m_axi" port="columnIndexes" bundle="gmem1" offset="slave" name="" depth="100" num_read_outstanding="-1" num_write_outstanding="-1" max_burst_read_length="-1" max_burst_write_length="-1" latency="-1" max_widen_bitwidth="-1" channel=""/>
<pragma file="SpMV.cpp" line="17" pragmaType="interface" parentfunction="SpMV" mode="m_axi" port="rowPointers" bundle="gmem2" offset="slave" name="" depth="11" num_read_outstanding="-1" num_write_outstanding="-1" max_burst_read_length="-1" max_burst_write_length="-1" latency="-1" max_widen_bitwidth="-1" channel=""/>
<pragma file="SpMV.cpp" line="18" pragmaType="interface" parentfunction="SpMV" mode="m_axi" port="vector" bundle="gmem3" offset="slave" name="" depth="10" num_read_outstanding="-1" num_write_outstanding="-1" max_burst_read_length="-1" max_burst_write_length="-1" latency="-1" max_widen_bitwidth="-1" channel=""/>
<pragma file="SpMV.cpp" line="19" pragmaType="interface" parentfunction="SpMV" mode="m_axi" port="output" bundle="gmem4" offset="slave" name="" depth="10" num_read_outstanding="-1" num_write_outstanding="-1" max_burst_read_length="-1" max_burst_write_length="-1" latency="-1" max_widen_bitwidth="-1" channel=""/>
<pragma file="SpMV.cpp" line="21" pragmaType="interface" parentfunction="SpMV" mode="s_axilite" port="values" bundle="control" offset="-1" name="" clock="" impl="" register="0"/>
<pragma file="SpMV.cpp" line="22" pragmaType="interface" parentfunction="SpMV" mode="s_axilite" port="columnIndexes" bundle="control" offset="-1" name="" clock="" impl="" register="0"/>
<pragma file="SpMV.cpp" line="23" pragmaType="interface" parentfunction="SpMV" mode="s_axilite" port="rowPointers" bundle="control" offset="-1" name="" clock="" impl="" register="0"/>
<pragma file="SpMV.cpp" line="24" pragmaType="interface" parentfunction="SpMV" mode="s_axilite" port="numOfRows" bundle="control" offset="-1" name="" clock="" impl="" register="0"/>
<pragma file="SpMV.cpp" line="25" pragmaType="interface" parentfunction="SpMV" mode="s_axilite" port="vector" bundle="control" offset="-1" name="" clock="" impl="" register="0"/>
<pragma file="SpMV.cpp" line="26" pragmaType="interface" parentfunction="SpMV" mode="s_axilite" port="output" bundle="control" offset="-1" name="" clock="" impl="" register="0"/>
<pragma file="SpMV.cpp" line="28" pragmaType="interface" parentfunction="SpMV" mode="s_axilite" port="" bundle="control" offset="-1" name="" clock="" impl="" register="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="bool operator<<5, false>(ap_int_base<5, false> const&, int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<5, false>::operator unsigned long long() const" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_uint<5>::ap_uint(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<33, true>::operator long long() const" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="bool ap_int_base<5, false>::operator<<5, false>(ap_int_base<5, false> const&) const" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<33, true>::ap_int_base(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<33, true>::ap_int_base<5, false>(ap_int_base<5, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_uint<5>::ap_uint<5, false>(ap_int_base<5, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<32, true>::ap_int_base(int)" off="0" region="0" recursive="0"/>
<pragma file="D:/Xilinx/Vitis_HLS/2024.1/common/technology/autopilot\etc/ap_common.h" line="515" pragmaType="inline" parentfunction="_ZN8ssdm_intILi33ELb1EEC2EDq33_i" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<33, true>::ap_int_base<32, true>(ap_int_base<32, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="bool ap_int_base<5, false>::operator<<32, true>(ap_int_base<32, true> const&) const" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_uint<9>::ap_uint<9, false>(ap_int_base<9, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="D:/Xilinx/Vitis_HLS/2024.1/common/technology/autopilot\etc/ap_common.h" line="523" pragmaType="inline" parentfunction="_ZN8ssdm_intILi1ELb0EEC2EDq1_j" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int<33>::ap_int<33, true>(ap_int_base<33, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<5, false>::ap_int_base(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<5, false>::RType<32, true>::plus operator+<5, false, 32, true>(ap_int_base<5, false> const&, ap_int_base<32, true> const&)" off="0" region="0" recursive="0"/>
<pragma file="D:/Xilinx/Vitis_HLS/2024.1/common/technology/autopilot\etc/ap_common.h" line="515" pragmaType="inline" parentfunction="ssdm_int<32, true>::ssdm_int(int)" off="0" region="0" recursive="0"/>
<pragma file="D:/Xilinx/Vitis_HLS/2024.1/common/technology/autopilot\etc/ap_common.h" line="523" pragmaType="inline" parentfunction="_ZN8ssdm_intILi5ELb0EEC2EDq5_j" off="0" region="0" recursive="0"/>
</pragmas>
